apply plugin: "java"
apply plugin: "idea"
apply plugin: "eclipse"

task wrapper(type: Wrapper) {
    gradleVersion "1.0-rc-3"
}

repositories {
    mavenCentral()
}

ext.seleniumVersion = "2.22.0"

dependencies {
    ["selenium-java", "selenium-remote-driver", "selenium-server"].each {
        compile "org.seleniumhq.selenium:$it:$seleniumVersion"
    }
    testCompile "junit:junit-dep:4.8+"

    // dependencies for Geb
    testCompile "org.codehaus.geb:geb-spock:0.7.0"
    testCompile "org.spockframework:spock-core:0.6-groovy-1.8"
}

tasks.withType(JavaExec) {
    classpath = configurations.compile + sourceSets.test.output
    args project.hasProperty("args") ? project.args.split("\\s") : []
}

test {
    //makes the standard streams (err and out) visible at console when running tests
   testLogging.showStandardStreams = true

   //listening to test execution events
   beforeTest { descriptor ->
      // TODO start test server
      // TODO start ghostdriver
      logger.lifecycle("Running test: " + descriptor)
   }
   onOutput { descriptor, event ->
      logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
   }
}
